###########################
######## TEMPLATES ########
###########################

default:
  image: python:3.10
  tags:
    - linux
  before_script:
    - python -m pip install -U tox
  artifacts:
    expire_in: 1 week

.matrix:
  image: python:$PYTHON_VERSION
  needs: []
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.8', '3.9', '3.10']

.windows:
  extends: .matrix
  tags:
    - windows
  before_script:
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install -y python --version=$PYTHON_VERSION --no-progress
    - RefreshEnv
    - python -m pip install -U tox
    - $env:USE_CYTHON = "True"

###########################
######### STAGES ##########
###########################

stages:
  - lint
  - build
  - docs
  - tests
  - deploy

###########################
######### LINT ############
###########################

lint:
  stage: lint
  needs: []
  script:
    - python -m tox -e lint

###########################
######### BUILD ###########
###########################

build-linux:
  extends: .matrix
  stage: build
  script:
    - python -m tox -e build-linux
  artifacts:
    paths:
      - dist

build-windows:
  extends: .windows
  stage: build
  script:
    - python -m tox -e build-windows
  artifacts:
    paths:
      - dist

###########################
######### DOCS ############
###########################

docs:
  stage: docs
  needs: []
  script:
    - git checkout $CI_COMMIT_BRANCH
    - git fetch origin main
    - python -m tox -e docs
  artifacts:
    paths:
      - dist/docs

###########################
######### TESTS ###########
###########################

tests-linux:
  extends: .matrix
  stage: tests
  variables:
    CODECOV_TOKEN: $CODECOV_TOKEN
  script:
    - python -m tox -e tests
  after_script:
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - chmod +x codecov
    - ./codecov -t $CODECOV_TOKEN

tests-windows:
  extends: .windows
  stage: tests
  script:
    - python -m tox -e tests

###########################
######## DEPLOY ###########
###########################

# The name must be `pages`!
# Otherwise webpage on gitlab.io will not be updated!
pages:
  stage: deploy
  script:
    - cp -r dist/docs public
  only:
    - tags
  artifacts:
    paths:
      - public

pypi:
  stage: deploy
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - python -m pip install twine
    - python -m twine upload --verbose dist/*.tar.gz dist/*.whl
  only:
    - tags
