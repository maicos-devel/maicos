name: Build

on:
  push:
    tags: ["*"]
  pull_request:
    paths:
      # build wheels in PR if this file changed
      - '.github/workflows/build-wheels.yml'
      # build wheels in PR if any of the build system files changed
      - '**/setup.py'
      - '**/pyproject.toml'
      - '**/MANIFEST.in'
  schedule:
    # check the build once a week on mondays
    - cron: '0 10 * * 1'

jobs:
  build-wheels:
    name: wheels / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, windows-2025, macos-13, macos-15]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp313-*
          CIBW_SKIP: "*musllinux*"
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build-sdist:
    name: sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: python -m pip install wheel build tox

      - name: Build sdist
        run: python -m build --sdist --outdir dist .

      - name: Test build integrity
        run: tox -e build

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  release:
    name: Release package
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/maicos
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Publish to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.whl
          prerelease: ${{ contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
